<p style="font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Microsoft YaHei&quot;; box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; font-size: 0.95rem; line-height: 1.6rem; overflow-wrap: break-word;">In Visual Studio, if we add a Resource File (.resx) to a .NET Core project, you will find a ".Designer.cs" file is automatically generated and updated whenever the resource content changes. This file basically contains auto-generated code for accessing resource values by key. In my blog system, I use the Resource File to maintain the default configuration data when setting up the blog for the first run.</p><p style="color: rgb(248, 249, 250); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Microsoft YaHei&quot;; box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; font-size: 0.95rem; line-height: 1.6rem; overflow-wrap: break-word;"><img src="https://cdn-blog.edi.wang/ediwang-images/img-ba99e552-e7a5-45f9-bb6d-926eb2d7f60a.png" alt="" class="img-fluid img-thumbnail" style="box-sizing: border-box; vertical-align: middle; max-width: 100%; height: auto; padding: 0.25rem; border: var(--bs-border-width) solid var(--bs-border-color); border-radius: var(--bs-border-radius); cursor: pointer; min-height: 4px; min-width: 4px;"></p><p style=" font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Microsoft YaHei&quot;; box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; font-size: 0.95rem; line-height: 1.6rem; overflow-wrap: break-word;">The designer generated code is like this:</p><pre class="language-csharp" style="color: rgb(248, 249, 250); box-sizing: border-box; font-family: var(--bs-font-monospace); font-size: 0.875em; margin-top: 0px; margin-bottom: 1rem; overflow: auto;"><code class="hljs language-csharp" style="box-sizing: border-box; font-family: var(--bs-font-monospace); font-size: inherit; color: rgb(227, 227, 227); overflow-wrap: break-word; word-break: normal; background-color: rgb(46, 46, 46); border: 1px solid rgb(69, 69, 69); display: block; overflow-x: auto; padding: 1em; border-radius: 5px;"><span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">private</span> <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">static</span> <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">global</span>::System.Resources.ResourceManager resourceMan;

<span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">private</span> <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">static</span> <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">global</span>::System.Globalization.CultureInfo resourceCulture;

[<span class="hljs-meta" style="box-sizing: border-box; color: rgb(1, 207, 255);">global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(<span class="hljs-string" style="box-sizing: border-box; color: rgb(206, 145, 120);">"Microsoft.Performance"</span>, <span class="hljs-string" style="box-sizing: border-box; color: rgb(206, 145, 120);">"CA1811:AvoidUncalledPrivateCode"</span>)</span>]
<span class="hljs-function" style="box-sizing: border-box;"><span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">internal</span> <span class="hljs-title" style="box-sizing: border-box; color: rgb(1, 207, 255);">DataResource</span>()</span> {
}

<span class="hljs-comment" style="box-sizing: border-box; color: rgb(87, 166, 74);"><span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">///</span> <span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">&lt;summary&gt;</span></span>
<span class="hljs-comment" style="box-sizing: border-box; color: rgb(87, 166, 74);"><span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">///</span>   Returns the cached ResourceManager instance used by this class.</span>
<span class="hljs-comment" style="box-sizing: border-box; color: rgb(87, 166, 74);"><span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">///</span> <span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">&lt;/summary&gt;</span></span>
[<span class="hljs-meta" style="box-sizing: border-box; color: rgb(1, 207, 255);">global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)</span>]
<span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">internal</span> <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">static</span> <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">global</span>::System.Resources.ResourceManager ResourceManager {
    <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">get</span> {
        <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">if</span> (<span class="hljs-built_in" style="box-sizing: border-box; color: rgb(86, 156, 214);">object</span>.ReferenceEquals(resourceMan, <span class="hljs-literal" style="box-sizing: border-box; color: rgb(86, 156, 214);">null</span>)) {
            <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">global</span>::System.Resources.ResourceManager temp = <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">new</span> <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">global</span>::System.Resources.ResourceManager(<span class="hljs-string" style="box-sizing: border-box; color: rgb(206, 145, 120);">"Moonglade.Setup.Data.DataResource"</span>, <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">typeof</span>(DataResource).Assembly);
            resourceMan = temp;
        }
        <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">return</span> resourceMan;
    }
}

<span class="hljs-comment" style="box-sizing: border-box; color: rgb(87, 166, 74);"><span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">///</span> <span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">&lt;summary&gt;</span></span>
<span class="hljs-comment" style="box-sizing: border-box; color: rgb(87, 166, 74);"><span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">///</span>   Overrides the current thread's CurrentUICulture property for all</span>
<span class="hljs-comment" style="box-sizing: border-box; color: rgb(87, 166, 74);"><span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">///</span>   resource lookups using this strongly typed resource class.</span>
<span class="hljs-comment" style="box-sizing: border-box; color: rgb(87, 166, 74);"><span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">///</span> <span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">&lt;/summary&gt;</span></span>
[<span class="hljs-meta" style="box-sizing: border-box; color: rgb(1, 207, 255);">global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)</span>]
<span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">internal</span> <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">static</span> <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">global</span>::System.Globalization.CultureInfo Culture {
    <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">get</span> {
        <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">return</span> resourceCulture;
    }
    <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">set</span> {
        resourceCulture = <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">value</span>;
    }
}
</code></pre><p style="font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Microsoft YaHei&quot;; box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; font-size: 0.95rem; line-height: 1.6rem; overflow-wrap: break-word;">And for each resource key, it generates a read-only property for getting the value.</p><pre class="language-csharp" style="color: rgb(248, 249, 250); box-sizing: border-box; font-family: var(--bs-font-monospace); font-size: 0.875em; margin-top: 0px; margin-bottom: 1rem; overflow: auto;"><code class="hljs language-csharp" style="box-sizing: border-box; font-family: var(--bs-font-monospace); font-size: inherit; color: rgb(227, 227, 227); overflow-wrap: break-word; word-break: normal; background-color: rgb(46, 46, 46); border: 1px solid rgb(69, 69, 69); display: block; overflow-x: auto; padding: 1em; border-radius: 5px;"><span class="hljs-comment" style="box-sizing: border-box; color: rgb(87, 166, 74);"><span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">///</span> <span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">&lt;summary&gt;</span></span>
<span class="hljs-comment" style="box-sizing: border-box; color: rgb(87, 166, 74);"><span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">///</span>   Looks up a localized string similar to {&amp;quot;Name&amp;quot;:&amp;quot;Admin&amp;quot;,&amp;quot;Description&amp;quot;:&amp;quot;Moonglade</span>
Admin&amp;quot;,&amp;quot;ShortDescription&amp;quot;:&amp;quot;Moonglade Admin&amp;quot;,&amp;quot;AvatarBase64&amp;quot;:&amp;quot;&amp;quot;}.
<span class="hljs-comment" style="box-sizing: border-box; color: rgb(87, 166, 74);"><span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">///</span> <span class="hljs-doctag" style="box-sizing: border-box; color: rgb(128, 128, 128);">&lt;/summary&gt;</span></span>
<span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">internal</span> <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">static</span> <span class="hljs-built_in" style="box-sizing: border-box; color: rgb(86, 156, 214);">string</span> BlogOwnerSettings {
    <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">get</span> {
        <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">return</span> ResourceManager.GetString(<span class="hljs-string" style="box-sizing: border-box; color: rgb(206, 145, 120);">"BlogOwnerSettings"</span>, resourceCulture);
    }
}</code></pre><p style=" font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Microsoft YaHei&quot;; box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; font-size: 0.95rem; line-height: 1.6rem; overflow-wrap: break-word;">But I don't want to use the generated code for accessing the values. So I would like to stop the automatical generation for this designer.cs file.</p><p style="font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Microsoft YaHei&quot;; box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; font-size: 0.95rem; line-height: 1.6rem; overflow-wrap: break-word;">Actually, the designer.cs file was generated by a custom tool, just like how EF4-6 used to generate code using the T4 template, which T4 is just another custom tool. In this case, the custom tool used to generate "designer.cs" file for a ".resx" file is called "<span style="box-sizing: border-box; font-weight: bolder;">ResXFileCodeGenerator</span>".&nbsp;</p><p style="font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Microsoft YaHei&quot;; box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; font-size: 0.95rem; line-height: 1.6rem; overflow-wrap: break-word;">If you are using Visual Studio, you can simply find it in the&nbsp;<span style="box-sizing: border-box; font-weight: bolder;">Properties Window</span>&nbsp;of the ".resx" file, and turn it off by choosing "<span style="box-sizing: border-box; font-weight: bolder;">&lt;reset to default&gt;</span>"</p><p style="color: rgb(248, 249, 250); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Microsoft YaHei&quot;; box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; font-size: 0.95rem; line-height: 1.6rem; overflow-wrap: break-word;"><img src="https://cdn-blog.edi.wang/ediwang-images/img-cffe2adc-4276-4a37-b091-06395f680844.png" alt="" class="img-fluid img-thumbnail" style="box-sizing: border-box; vertical-align: middle; max-width: 100%; height: auto; padding: 0.25rem; border: var(--bs-border-width) solid var(--bs-border-color); border-radius: var(--bs-border-radius); cursor: pointer; min-height: 4px; min-width: 4px;"></p><p style=" font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Microsoft YaHei&quot;; box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; font-size: 0.95rem; line-height: 1.6rem; overflow-wrap: break-word;">If you are using Visual Studio Code, you can also edit your ".csproj" file, and remove these:</p><pre class="language-markup" style="color: rgb(248, 249, 250); box-sizing: border-box; font-family: var(--bs-font-monospace); font-size: 0.875em; margin-top: 0px; margin-bottom: 1rem; overflow: auto;"><code class="lang-xml hljs language-xml" style="box-sizing: border-box; font-family: var(--bs-font-monospace); font-size: inherit; color: rgb(227, 227, 227); overflow-wrap: break-word; word-break: normal; background-color: rgb(46, 46, 46); border: 1px solid rgb(69, 69, 69); display: block; overflow-x: auto; padding: 1em; border-radius: 5px;"><span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;<span class="hljs-name" style="box-sizing: border-box;">ItemGroup</span>&gt;</span>
  <span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;<span class="hljs-name" style="box-sizing: border-box;">Compile</span> <span class="hljs-attr" style="box-sizing: border-box; color: rgb(156, 220, 254);">Update</span>=<span class="hljs-string" style="box-sizing: border-box; color: rgb(206, 145, 120);">"Data\DataResource.Designer.cs"</span>&gt;</span>
    <span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;<span class="hljs-name" style="box-sizing: border-box;">DesignTime</span>&gt;</span>True<span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;/<span class="hljs-name" style="box-sizing: border-box;">DesignTime</span>&gt;</span>
    <span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;<span class="hljs-name" style="box-sizing: border-box;">AutoGen</span>&gt;</span>True<span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;/<span class="hljs-name" style="box-sizing: border-box;">AutoGen</span>&gt;</span>
    <span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;<span class="hljs-name" style="box-sizing: border-box;">DependentUpon</span>&gt;</span>DataResource.resx<span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;/<span class="hljs-name" style="box-sizing: border-box;">DependentUpon</span>&gt;</span>
  <span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;/<span class="hljs-name" style="box-sizing: border-box;">Compile</span>&gt;</span>
<span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;/<span class="hljs-name" style="box-sizing: border-box;">ItemGroup</span>&gt;</span>

<span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;<span class="hljs-name" style="box-sizing: border-box;">ItemGroup</span>&gt;</span>
  <span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;<span class="hljs-name" style="box-sizing: border-box;">EmbeddedResource</span> <span class="hljs-attr" style="box-sizing: border-box; color: rgb(156, 220, 254);">Update</span>=<span class="hljs-string" style="box-sizing: border-box; color: rgb(206, 145, 120);">"Data\DataResource.resx"</span>&gt;</span>
    <span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;<span class="hljs-name" style="box-sizing: border-box;">Generator</span>&gt;</span>ResXFileCodeGenerator<span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;/<span class="hljs-name" style="box-sizing: border-box;">Generator</span>&gt;</span>
    <span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;<span class="hljs-name" style="box-sizing: border-box;">LastGenOutput</span>&gt;</span>DataResource.Designer.cs<span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;/<span class="hljs-name" style="box-sizing: border-box;">LastGenOutput</span>&gt;</span>
  <span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;/<span class="hljs-name" style="box-sizing: border-box;">EmbeddedResource</span>&gt;</span>
<span class="hljs-tag" style="box-sizing: border-box; color: rgb(86, 156, 214);">&lt;/<span class="hljs-name" style="box-sizing: border-box;">ItemGroup</span>&gt;</span></code></pre><p style="font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Microsoft YaHei&quot;; box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; font-size: 0.95rem; line-height: 1.6rem; overflow-wrap: break-word;">Now, how can we read values from the resource file? It's very simple:</p><pre class="language-csharp" style="color: rgb(248, 249, 250); box-sizing: border-box; font-family: var(--bs-font-monospace); font-size: 0.875em; margin-top: 0px; margin-bottom: 1rem; overflow: auto;"><code class="hljs language-csharp" style="box-sizing: border-box; font-family: var(--bs-font-monospace); font-size: inherit; color: rgb(227, 227, 227); overflow-wrap: break-word; word-break: normal; background-color: rgb(46, 46, 46); border: 1px solid rgb(69, 69, 69); display: block; overflow-x: auto; padding: 1em; border-radius: 5px;">ResourceManager rm = <span class="hljs-keyword" style="box-sizing: border-box; color: rgb(86, 156, 214);">new</span> ResourceManager(<span class="hljs-string" style="box-sizing: border-box; color: rgb(206, 145, 120);">"Moonglade.Setup.Data.DataResource"</span>, Assembly.GetExecutingAssembly());
rm.GetString(<span class="hljs-string" style="box-sizing: border-box; color: rgb(206, 145, 120);">"Your_Resource_Key"</span>);</code><div><br></div><div>This content is copy from @<a href="https://edi.wang/post/2019/5/14/stop-generating-designercs-for-resx-files-in-net-core" target="_blank" style="color: white;">https://edi.wang/post/2019/5/14/stop-generating-designercs-for-resx-files-in-net-core</a></div></pre>